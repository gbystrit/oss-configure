
Compiling GCC on all platforms:

- Compile the following prerequisite packages:
    texinfo-2.14
    make-3.81
    gawk-3.1.6
    flex-2.5.35
    bison-2.3

- Compile binutils-2.19. See NOTE: for the nex item.

- Compile gcc-3.4.6 with whatever compiler available. 
  NOTE: May be challenging with some native compilers. At the time of this 
        writing, gcc-3.4.3 was available for all platforms in use. It was 
        located in here (may still be in archives):
        ~gbystrit/local/<platform-id>/gcc-3.4.3

- Make corresponding links in platorm's bin folder for gcc-3.4 and g++-3.4

- Compile gmp-4.2.4 and mfpr-2.3.2
  Issue "make check" after compile.

- Compile gcc-4.3.2 with gcc-3.4.

- Make corresponding links in platorm's bin folder for gcc-4.3 and g++-4.3

- Make links for gcc-4.3/lib/*.so.* in platform's lib folder.

On some platforms 'configure' may need to be run with CONFIG_SHELL=bash. To
build 'bash', the following packages need to be compiled:

  gettext-0.17
  bash-3.2


General notes:
==============

All needed packages were taken as of the latest version at the time of this
writing, with some exceptions where indicated bellow.

For every package there's a backup SVN repository in svn-source-depot to track
possible local changes to the source to make things compile. The top
repository URL is "file:///opt/quest/svn-source-depot/tools". 

  To establish the initial source tree (if does not yet exist), do the 
  following:
    svn co file:///opt/quest/svn-source-depot/tools /opt/quest/source

  Or alternatively (because of /opt/quest/.svnrc exists):
    svn co %r/tools /opt/quest/source


Building a package on a particular platform
===========================================

Packages need to be built in a folder other than the source. E.g. for
gcc-3.4.6 build, make and empty folder "gcc-3.4.6" (name does not matter) and
cd to it. Then issue the following command:
  sh -x /opt/quest/source/configure/gcc-3.4.6-binutils-2.19.sh


Incorporating a new package (say, bash-3.2)
===========================================

- Download the package
  $ cd /opt/quest/depot
  $ ftp ftp.gnu.org
  Connected to ftp.gnu.org (140.186.70.20).
  Name (ftp.gnu.org:gbystrit): ftp
  ftp> cd gnu/bash
  ftp> bin
  ftp> get bash-3.2.tar.gz
  ftp> quit

- Extract the downloaded package
  $ cd /opt/quest/source
  $ gunzip -c ../depot/bash-3.2.tar.gz | tar xf -

- Create an SVN repository for the package
  $ svnadmin create /opt/quest/svn-source-depot/bash-3.2

- Add the extracted files to the repository
  $ cd bash-3.2
  $ svn co %r/bash-3.2 .
  $ svn add . --force -q
  $ svn commit -q -m "Imported distribution archive"

- Establish external dependency in the top repository.
  $ cd /opt/quest/source
  $ svn propedit svn:externals .
    # It will start vi, add the following line and save.
    bash-3.2          file:///opt/quest/svn-source-depot/bash-3.2

  $ svn commit -m "Added external dependency for bash-3.2"

Now you can build the package from a particular platform. To make it easy to
run confiugure, create a configure invocation script for newly added bash-3.2
  $ cd /opt/quest/source/configure
  $ echo > bash-3.2.sh
  CONFIG_SHELL="${CONFIG_SHELL:=ksh}" CC=gcc-3.4.3 CXX=g++-3.4.3 \
  /opt/quest/source/bash-3.2/configure --prefix=/opt/quest/platform/${SYSID:?}/bash-3.2
  ^D
  $ svn add bash-3.2.sh
  $ svn commit -m "Added configure invocation script for bash-3.2"

  
Encountered issues:
===================

Sometimes configure for a facility started complaining about autoconf not
being available. The latter is not required for distribution archive,
apparenlty some file/folder timestamp mess-up causes its use. To resolve, 
simply delete the facility folder and do "svn update".

Had to setup CONFIG_SHELL to ksh as on some platforms standard sh caused
configure problems (known issue). This works for almost all packages except
for bison -- it gives syntax error on Solaris when used with anything other
than sh (tried ksh, bash). 

UPDATE: In some cases it may hurt builds on some platforms. As an example, see
notes regarding flex build on sun-10-x86 bellow.

Some builds modify source files or leave some files behind. Those need to be
cleaned up with "svn revert".

sun-9-sparc
-----------

This is a base platform to build all dependency tools. sun-8-sparc and
sun-10-sparc will link whatever possible from this platform.

- Compiling texinfo-2.14 had an issue with unavailable help2man. Trying to
  compile help2man required downloading some perl modules from CPAN. To avoid
  this (it is only for man pages, after all), simply copied /bin/true to
  help2man in a directory on PATH and build succeeded.

- Bison was needed for compiling binutils-2.19. Tried first bison-2.4, then
  had to switch back to bison-2.3 because of sun-8-sparc issues (see bellow).

- Bison required GNU m4 package, had to build m4-1.4.12.

- Bison's configure failed with the platform's nawk, had to build gawk-3.1.6.

- GCC 3.4.6 required flex, had to build flex-2.5.35.

sun-8-sparc
-----------

This platform presented need for older bison package (2.3 instead of latest
2.4), as with the latest compiling gcc-3.4.6 produced errors when generating
c-parse.c.

- texinfo-2.14 linked from sun-9-sparc
- make-3.81 linked from sun-9-sparc
- m4-1.4 linked from sun-9-sparc
- gawk-3.1 linked from sun-9-sparc
- flex-2.5 linked from sun-9-sparc
- bison-2.3 linked from sun-9-sparc

- Had to build lzma-4.32.7 specifically for this platform because of library
  version number mismatch.

sun-10-sparc
------------

- texinfo-2.14 linked from sun-9-sparc
- make-3.81 linked from sun-9-sparc
- m4-1.4 linked from sun-9-sparc
- gawk-3.1 linked from sun-9-sparc
- flex-2.5 linked from sun-9-sparc
- bison-2.3 linked from sun-9-sparc
- lzma-4.32 linked from sun-9-sparc

sun-10-x86
----------

- binutils-2.19 (and later gcc-3.4.6 too)

  After building bison-2.4 and flex-2.5.35, had issues with generated code in
  files binutils/arlex.c and ld/ldlex.c -- not defined identifiers flex_int32_t,
  flex_int16_t, etc. To resolve, wait till compilation fails and then edit a
  corresponding file by replacing "flex_int" with just "int" and adding the
  following line to the beginning of the file:
  #include <inttypes.h>

  UPDATE: Above is not necessary. The real problem was flex-2.5.35 build --
  removing CONFIG_SHELL=ksh from configure/flex-2.5.35.sh fixed everything.

aix-52-ppc
----------

- Set CONFIG_SHELL to bash for all invocation scripts, e.g.:
  $ CONFIG_SHELL=bash sh -x /opt/quest/source/configure/flex-2.5.sh

- flex-2.5
  Running 'make' right after 'configure' produces error about undefined
  rpl_malloc() and rpl_realloc(). Edit config.h to remove definitions of
  malloc to rpl_malloc and try again.

- Well, even though binutils can be built on this platform, ld is not
  functional there as link errors produced during final libstdc++ build. I
  even tried to compile with --disable-shared when building gcc-3.4.6, and 
  it even succeeded. However first use produced the following link error:
    "reloc .data:0 not in csect"
  Will be building with /usr/ccs/bin/ld and /usr/ccs/bin/as.

- According to gcc platform notes for AIX, it is still recommended to use
  standard as and ld on this platform. So we are on the right track.

- gcc-4.3.2 build used to fail on this platform with "out of memory" error for
  some generators. It turned out that "ulimit" settings were to blame --
  memory and data limits must be set to unlimited, e.g.:
    $ ulimit -m unlimited
    $ ulimit -d unlimited
  I also modified /etc/security/limits following recomendation on the web, not
  sure if it were a factor or just ulimit helped.

aix-51-ppc
----------

- Symbolically linked most compiled tools from aix-52-ppc, however had to
  custom build some (e.g. texinfo) that could not run utilities.

aix-53-ppc
----------

- Symbolically linked all compiled tools from aix-52-ppc. 

hp11-23-pa
==========

- m4-1.4.12 built with existing gcc-3.4.3 will report "memory exhausted" when
  run. Had to rebuild m4 with standad HP-UX compiler by specifying CC=cc when
  invoking configure script.

- flex-2.5.35 compile failed like on AIX, only with on symbol reported
  undefined - rpl_realloc(). Had to remove it in config.h and restart make.

- binutils-2.19 will not build 'ld'. We need to build binutils anyways to get
  GNU as.

- GCC must be built with GNU as and /usr/ccs/bin/ld.

- gmp must be invoked with ABI=2.0n in the environment.

hp11-23-ia64
============

See notes for hp11-23-pa.

- "make install" for gcc-3.4.6 failed in tar trying to change file ownership.
  Had to build tar-1.20 to overcome the problem.

- Could not build tar-1.20 with available gcc-3.4.3, switched to native
  compiler with:
    CC=cc /opt/quest/source/configure/tar-1.20.sh

